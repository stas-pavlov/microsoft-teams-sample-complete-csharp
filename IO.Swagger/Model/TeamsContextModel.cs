/* 
 * OpenHack
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TeamsContextModel
    /// </summary>
    [DataContract]
    public partial class TeamsContextModel :  IEquatable<TeamsContextModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TeamsContextModel" /> class.
        /// </summary>
        /// <param name="TeamId">TeamId.</param>
        /// <param name="ChannelId">ChannelId.</param>
        /// <param name="Locale">Locale.</param>
        /// <param name="Theme">Theme.</param>
        /// <param name="EntityId">EntityId.</param>
        /// <param name="SubEntityId">SubEntityId.</param>
        /// <param name="Upn">Upn.</param>
        /// <param name="Tid">Tid.</param>
        /// <param name="GroupId">GroupId.</param>
        public TeamsContextModel(string TeamId = default(string), string ChannelId = default(string), string Locale = default(string), string Theme = default(string), string EntityId = default(string), string SubEntityId = default(string), string Upn = default(string), Guid? Tid = default(Guid?), Guid? GroupId = default(Guid?))
        {
            this.TeamId = TeamId;
            this.ChannelId = ChannelId;
            this.Locale = Locale;
            this.Theme = Theme;
            this.EntityId = EntityId;
            this.SubEntityId = SubEntityId;
            this.Upn = Upn;
            this.Tid = Tid;
            this.GroupId = GroupId;
        }
        
        /// <summary>
        /// Gets or Sets TeamId
        /// </summary>
        [DataMember(Name="teamId", EmitDefaultValue=false)]
        public string TeamId { get; set; }

        /// <summary>
        /// Gets or Sets ChannelId
        /// </summary>
        [DataMember(Name="channelId", EmitDefaultValue=false)]
        public string ChannelId { get; set; }

        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name="locale", EmitDefaultValue=false)]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or Sets Theme
        /// </summary>
        [DataMember(Name="theme", EmitDefaultValue=false)]
        public string Theme { get; set; }

        /// <summary>
        /// Gets or Sets EntityId
        /// </summary>
        [DataMember(Name="entityId", EmitDefaultValue=false)]
        public string EntityId { get; set; }

        /// <summary>
        /// Gets or Sets SubEntityId
        /// </summary>
        [DataMember(Name="subEntityId", EmitDefaultValue=false)]
        public string SubEntityId { get; set; }

        /// <summary>
        /// Gets or Sets Upn
        /// </summary>
        [DataMember(Name="upn", EmitDefaultValue=false)]
        public string Upn { get; set; }

        /// <summary>
        /// Gets or Sets Tid
        /// </summary>
        [DataMember(Name="tid", EmitDefaultValue=false)]
        public Guid? Tid { get; set; }

        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name="groupId", EmitDefaultValue=false)]
        public Guid? GroupId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TeamsContextModel {\n");
            sb.Append("  TeamId: ").Append(TeamId).Append("\n");
            sb.Append("  ChannelId: ").Append(ChannelId).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  Theme: ").Append(Theme).Append("\n");
            sb.Append("  EntityId: ").Append(EntityId).Append("\n");
            sb.Append("  SubEntityId: ").Append(SubEntityId).Append("\n");
            sb.Append("  Upn: ").Append(Upn).Append("\n");
            sb.Append("  Tid: ").Append(Tid).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TeamsContextModel);
        }

        /// <summary>
        /// Returns true if TeamsContextModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TeamsContextModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TeamsContextModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TeamId == input.TeamId ||
                    (this.TeamId != null &&
                    this.TeamId.Equals(input.TeamId))
                ) && 
                (
                    this.ChannelId == input.ChannelId ||
                    (this.ChannelId != null &&
                    this.ChannelId.Equals(input.ChannelId))
                ) && 
                (
                    this.Locale == input.Locale ||
                    (this.Locale != null &&
                    this.Locale.Equals(input.Locale))
                ) && 
                (
                    this.Theme == input.Theme ||
                    (this.Theme != null &&
                    this.Theme.Equals(input.Theme))
                ) && 
                (
                    this.EntityId == input.EntityId ||
                    (this.EntityId != null &&
                    this.EntityId.Equals(input.EntityId))
                ) && 
                (
                    this.SubEntityId == input.SubEntityId ||
                    (this.SubEntityId != null &&
                    this.SubEntityId.Equals(input.SubEntityId))
                ) && 
                (
                    this.Upn == input.Upn ||
                    (this.Upn != null &&
                    this.Upn.Equals(input.Upn))
                ) && 
                (
                    this.Tid == input.Tid ||
                    (this.Tid != null &&
                    this.Tid.Equals(input.Tid))
                ) && 
                (
                    this.GroupId == input.GroupId ||
                    (this.GroupId != null &&
                    this.GroupId.Equals(input.GroupId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TeamId != null)
                    hashCode = hashCode * 59 + this.TeamId.GetHashCode();
                if (this.ChannelId != null)
                    hashCode = hashCode * 59 + this.ChannelId.GetHashCode();
                if (this.Locale != null)
                    hashCode = hashCode * 59 + this.Locale.GetHashCode();
                if (this.Theme != null)
                    hashCode = hashCode * 59 + this.Theme.GetHashCode();
                if (this.EntityId != null)
                    hashCode = hashCode * 59 + this.EntityId.GetHashCode();
                if (this.SubEntityId != null)
                    hashCode = hashCode * 59 + this.SubEntityId.GetHashCode();
                if (this.Upn != null)
                    hashCode = hashCode * 59 + this.Upn.GetHashCode();
                if (this.Tid != null)
                    hashCode = hashCode * 59 + this.Tid.GetHashCode();
                if (this.GroupId != null)
                    hashCode = hashCode * 59 + this.GroupId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
